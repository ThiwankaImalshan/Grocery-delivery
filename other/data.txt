                            <!-- <div class="order-details">
                                <div class="order-details-img">
                                    <img src="product img/apple.jpg" alt="">
                                </div>
                                <div class="order-details-texts">
                                    <div class="order-detail-txt">
                                        <p>Fresh Apple <Span>Rs.180.00</Span></p>
                                    </div>
                                    <div class="order-detail-icons">
                                        <div class="order-add-items">
                                            <button class="add-items-btn-minus items-btn">-</button>
                                            <span class="add-no-of-items">1</span>
                                            <button class="add-items-btn-plus items-btn">+</button>
                                            <i class="fa fa-times" aria-hidden="true"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="order-details">
                                <div class="order-details-img">
                                    <img src="product img/Almond.jpg" alt="">
                                </div>
                                <div class="order-details-texts">
                                    <div class="order-detail-txt">
                                        <p>Almonds <Span>Rs.230.00</Span></p>
                                    </div>
                                    <div class="order-detail-icons">
                                        <div class="order-add-items">
                                            <button class="add-items-btn-minus items-btn">-</button>
                                            <span class="add-no-of-items">1</span>
                                            <button class="add-items-btn-plus items-btn">+</button>
                                            <i class="fa fa-times" aria-hidden="true"></i>
                                        </div>
                                    </div>
                                </div>
                            </div> -->


















        //---------------------Add Cart Items to Checkout----------------------------

        // document.addEventListener('DOMContentLoaded', function() {
        //     // Reference the container element where cart items will be displayed
        //     const cartContainer = document.getElementById('orderDetail-Box');

        //     // Retrieve cart data from local storage
        //     const cartData = JSON.parse(localStorage.getItem('cart'));
        //     console.log('Cart Data:', cartData);

        //     // Fetch products data from category.json
        //     fetch('category.json')
        //         .then(response => response.json())
        //         .then(data => {
        //             // Extract only the "products" array
        //             const productsArray = data.categories.flatMap(category => category.subcategories.flatMap(subcategory => subcategory.products));
        //             console.log('Products Array:', productsArray);

        //             // Iterate over each item in the cart data
        //             cartData.forEach(cartItem => {
        //                 // Find the product in the products array with the matching ID
        //                 const product = productsArray.find(product => product.id === cartItem.product_id);

        //                 // Check if the product was found
        //                 if (product) {
        //                     console.log(product.name);
        //                     // Create a cart item element
        //                     const cartItemElement = document.createElement('div');
        //                     cartItemElement.classList.add('order-details');
        //                     cartItemElement.innerHTML = `
        //                         <div class="order-details-img">
        //                             <img src="${product.image}" alt="${product.name}">
        //                         </div>
        //                         <div class="order-details-texts">
        //                             <div class="order-detail-txt">
        //                                 <p>${product.name}<span>Rs.${product.price}</span></p>
        //                             </div>
        //                             <div class="order-detail-icons">
        //                                 <div class="order-add-items">
        //                                     <button class="add-items-btn-minus items-btn">-</button>
        //                                     <span class="add-no-of-items">${cartItem.quantity}</span>
        //                                     <button class="add-items-btn-plus items-btn">+</button>
        //                                     <i class="fa fa-times" aria-hidden="true"></i>
        //                                 </div>
        //                             </div>
        //                         </div>
        //                     `;

        //                     // Append the cart item element to the container
        //                     cartContainer.appendChild(cartItemElement);
        //                 } else {
        //                     console.log(`Product with ID ${cartItem.product_id} not found.`);
        //                 }
        //             });
        //         })
        //         .catch(error => console.error('Error fetching data:', error));
        // });















        

        // window.onload = function() {
        //     // Retrieve search input from query parameter
        //     const urlParams = new URLSearchParams(window.location.search);
        //     const searchInput = urlParams.get('searchInput');

        //     // Perform search function with the retrieved search input
        //     if (searchInput) {
        //         performSearch(searchInput);
        //     } else {
        //         console.log("No search input provided.");
        //     }
        // };

        // // function performSearch(searchInput) {
        // //     // Your search function logic here
        // //     console.log("Performing search with input:", searchInput);
        // // }

        // function performSearch(searchInput) {
        //     // Convert search input to lowercase
        //     console.log(searchInput);
        //     searchInput = searchInput.toLowerCase();
            
        //     // Replace 'searchInput' with document.getElementById('searchInput').value.toLowerCase()
        //     // Assuming 'searchInput' is the id of the input field you want to get the value from
        //     // Also assuming that 'searchData' is defined somewhere accessible in your code
        //     const filteredData = searchData.categories.flatMap(category =>
        //         category.subcategories.flatMap(subcategory =>
        //             subcategory.products.filter(product =>
        //                 product.name.toLowerCase().includes(searchInput)
        //             )
        //         )
        //     );

        //     // Assuming you have a function displayProducts() to display the filtered data
        //     displayProducts(filteredData);
        // }


















        


  

//     //_________________Cart__________________

//     let rowbody = document.querySelector('.a-row-body');
//     let listCart = document.querySelector('.listCart');
//     let navbarcart = document.querySelector('.navbar-cart');
//     let navbarcartSpan = document.querySelector('.navbar-cart span');
//     // let cartBox = [];
//     let cartBox = JSON.parse(localStorage.getItem('cart')) || [];
//     //---------Add to cart product id event listener--------
//     rowbody.addEventListener('click',(event)=>{
//         let positionClick =event.target;
//         if(positionClick.classList.contains('btn-addtocart')){
//             let product_id = positionClick.parentNode.parentNode.dataset.id;
//             addtoCart(product_id);
//         }
//     })


//     let outerProductsArray;
//     async function fetchData() {
//         try {
//             const response = await fetch('category.json');
//             const data = await response.json();

//             const products = [];
//             data.categories.forEach(category => {
//                 category.subcategories.forEach(subcategory => {
//                     subcategory.products.forEach(product => {
//                         products.push(product);
//                     });
//                 });
//             });

//             outerProductsArray = products;
//             addcarttoHTML();

//             // Call a function to handle the data
//             handleData();
//         } catch (error) {
//             console.error('Error fetching data:', error);
//         }
//     }
//     function handleData() {
//         // Now you can safely use outerProductsArray here
//         console.log("Outer Products Array:", outerProductsArray);
//     }
//     fetchData();


    

//     // Add to cart function
//     const addtoCart = (product_id) => {
//         let positionThisProductInCart = cartBox.findIndex((value) => value.product_id == product_id);
//         if (cartBox.length <= 0) {
//             cartBox = [{
//                 product_id: product_id,
//                 quantity: 1
//             }];
//         } else if (positionThisProductInCart < 0) {
//             cartBox.push({
//                 product_id: product_id,
//                 quantity: 1
//             });
//         } else {
//             cartBox[positionThisProductInCart].quantity = cartBox[positionThisProductInCart].quantity + 1;
//         }
//         console.log(cartBox);
//         addcarttoHTML();
//         saveCartToLocalStorage(); // Save the cart data to local storage after each modification
//     };





//     //add cart to html file
//     const addcarttoHTML=()=>{
//         listCart.innerHTML='';
//         let totalQuantity=0;
//         if(cartBox.length>0){
//             cartBox.forEach(cartss=>{
//                 totalQuantity=totalQuantity+cartss.quantity;
//                 let newCart=document.createElement('div');
//                 newCart.classList.add('listCart-items');
//                 newCart.dataset.id=cartss.product_id;
//                 let positionProduct=outerProductsArray.findIndex((value)=>value.id==cartss.product_id);
//                 let info=outerProductsArray[positionProduct];
//                 newCart.innerHTML=`
//                 <div class="listCart-image">
//                     <img src="${info.image}">
//                 </div>
//                 <div class="listCart-name">
//                 ${info.name}
//                 </div>
//                 <div class="listCart-totalPrice">Rs.${info.price*cartss.quantity}</div>
//                 <div class="listCart-quantity">
//                     <span class="listCart-minus"><</span>
//                     <span>${cartss.quantity}</span>
//                     <span class="listCart-plus">></span>
//                 </div>
//                 `;
//                 listCart.appendChild(newCart);
//             })
//         }
//         navbarcartSpan.innerText=totalQuantity;
//     }


//     //capture the product position click in cart and minus or plus click
//     listCart.addEventListener('click',(event)=>{
//         let positionClick=event.target;
//         if(positionClick.classList.contains('listCart-minus')||positionClick.classList.contains('listCart-plus')){
//             let product_id =positionClick.parentElement.parentElement.dataset.id;
//             let type='listCart-minus';
//             if(positionClick.classList.contains('listCart-plus')){
//                 type='listCart-plus';
//             }
//             changequantity(product_id,type);
//             console.log(product_id,type);
//         }
//     })


//     //adjust quantity and price when plus or minus click
//     const changequantity=(product_id,type)=>{
//         let positionItemInCart=cartBox.findIndex((value)=>value.product_id==product_id);
//         if(positionItemInCart>=0){
//             switch (type) {
//                 case 'listCart-plus':
//                      cartBox[positionItemInCart].quantity=cartBox[positionItemInCart].quantity+1;
//                     break;
            
//                 default:
//                     let valueChange=cartBox[positionItemInCart].quantity-1;
//                     if(valueChange>0){
//                         cartBox[positionItemInCart].quantity=valueChange;
//                     }else{
//                         cartBox.splice(positionItemInCart,1);
//                     }
//                     break;
//             }
//         }
//         saveCartToLocalStorage();
//         addcarttoHTML();
//     }

//     // Function to save the cart data to local storage
//     const saveCartToLocalStorage = () => {
//         localStorage.setItem('cart', JSON.stringify(cartBox));
//     };
    

//     // // Function to retrieve cart data from local storage and render it in the HTML
//     // const renderCartFromLocalStorage = () => {
//     //     let storedCart = JSON.parse(localStorage.getItem('cart'));
//     //     if (storedCart) {
//     //         cartBox = storedCart;
//     //         addcarttoHTML();
//     //     }
//     // };

//     // // Call renderCartFromLocalStorage on page load to display the cart contents
//     // renderCartFromLocalStorage();


//    // Retrieve cart data from local storage on page load
//     window.addEventListener('load', () => {
//         // Get cart data from local storage
//         const cartData = JSON.parse(localStorage.getItem('cart'));
//         // If cart data exists, assign it to cartBox array
//         if (cartData && Array.isArray(cartData)) {
//             cartBox = cartData;
//         }
//         // Render cart items from local storage
//         renderCartItemsFromLocalStorage();
//     });

//     // Function to render the cart items from local storage
//     const renderCartItemsFromLocalStorage = () => {
//         console.log("Rendering cart items from local storage...");
//         console.log("Cart data from local storage:", cartBox);
        
//         listCart.innerHTML = '';
//         let totalQuantity = 0;
//         if (cartBox.length > 0) {
//             cartBox.forEach(cartss => {
//                 totalQuantity += cartss.quantity;
//                 let newCart = document.createElement('div');
//                 newCart.classList.add('listCart-items');
//                 newCart.dataset.id = cartss.product_id;
//                 let positionProduct = outerProductsArray.findIndex((value) => value.id == cartss.product_id);
//                 let info = outerProductsArray[positionProduct];
//                 newCart.innerHTML = `
//                     <div class="listCart-image">
//                         <img src="${info.image}">
//                     </div>
//                     <div class="listCart-name">
//                         ${info.name}
//                     </div>
//                     <div class="listCart-totalPrice">Rs.${info.price * cartss.quantity}</div>
//                     <div class="listCart-quantity">
//                         <span class="listCart-minus"><</span>
//                         <span>${cartss.quantity}</span>
//                         <span class="listCart-plus">></span>
//                     </div>
//                 `;
//                 listCart.appendChild(newCart);
//             });
//         }
//         navbarcartSpan.innerText = totalQuantity;
//         console.log("Cart items rendered successfully.");
//     };



















// //----------Products----------

//     //fetch data from json file
//     fetch('./products.json')
//         .then((response) => response.json())
//         .then(productsArray=>renderAllProducts(productsArray));

//         function renderAllProducts (productsArray){
//             productsArray.forEach(product => renderOneProduct(product));
//             if(localStorage.getItem('carts')){
//                 carts=JSON.parse(localStorage.getItem('carts'));
//                 addCartToHTML();
//             }
//         }


//     //add data from json file to products array
//     // fetch('products.json')
//     // .then(response => response.json())
//     // .then(data => {
//     //     data.forEach(product => {

//     //     });
//     //     return products;
//     // })
//     // .catch(error => {
//     //     console.error('Error fetching products:', error);
//     // });

//     //add products to row-body
//     const findDiv=document.querySelector("#rowBody")
//     function renderOneProduct(product){
//         const newElement=document.createElement("div")
//         newElement.className="row-card"
//         newElement.dataset.id=product.id; //product id
//         newElement.innerHTML=`
//         <div class="row-card-img">
//             <img src="${product.image}" alt="Product 1">
//         </div>
//         <div class="row-txt" data-id="${product.id}">
//             <h3>${product.name}</h3>
//             <h4>Rs.${product.price}/=</h4>
//             <button class="btn-addtocart">
//                 Add to Cart
//             </button>
//         </div>
//         `
//         findDiv.append(newElement)
//     }










    // //---------Cart---------

    // //---------Add to cart product id event listener--------
    // rowbodyHTML.addEventListener('click',(event)=>{
    //     let positionClick =event.target;
    //     if(positionClick.classList.contains('btn-addtocart')){
    //         let product_id = positionClick.parentNode.dataset.id;
    //         addToCart(product_id);
    //     }
    // })

    // //product id add to cart
    // const addToCart=(product_id)=>{
    //     let positionThisProductInCart=cart.findIndex((value)=>value.product_id==product_id);
    //     if(cart.length<=0){
    //         cart=[{
    //             product_id:product_id,
    //             quantity:1
    //         }]
    //     }else if(positionThisProductInCart<0){
    //         cart.push({
    //             product_id:product_id,
    //             quantity:1
    //         })
    //     }else{
    //         cart(positionThisProductInCart).quantity=cart(positionThisProductInCart).quantity+1;
    //     }
    //     addCartToHTML();
    //     addCartToMemory();
    // }

    // //save cart data in memory
    // const addCartToMemory=()=>{
    //     localStorage.setItem('carts',JSON.stringify(cart));
    // }

    // // // Retrieve the stored carts data from localStorage
    // // let storedCarts = localStorage.getItem('carts');
    // // // Parse the JSON string back to an array of cart items
    // // let parsedCarts = JSON.parse(storedCarts);
    // // // Call addCartToHTML and pass the parsed cart data
    // // addCartToHTML(parsedCarts);


    // //add cart to html file
    // const addCartToHTML=()=>{
    //     listCartHTML.innerHTML='';
    //     let totalQuantity=0;
    //     if(cart.length>0){
    //         cart.forEach(carts=>{
    //             totalQuantity=totalQuantity+carts.quantity;
    //             let newCart=document.createElement('div');
    //             newCart.classList.add('listCart-items');
    //             newCart.dataset.id=carts.product_id;
    //             let positionProduct=products.findIndex((value)=>value.id==carts.product_id);
    //             let info=products[positionProduct];
    //             newCart.innerHTML=`
    //             <div class="listCart-image">
    //                 <img src="${info.image}">
    //             </div>
    //             <div class="listCart-name">
    //             ${info.name}
    //             </div>
    //             <div class="listCart-totalPrice">Rs.${info.price*carts.quantity}</div>
    //             <div class="listCart-quantity">
    //                 <span class="listCart-minus"><</span>
    //                 <span>${carts.quantity}</span>
    //                 <span class="listCart-plus">></span>
    //             </div>
    //             `;
    //             listCartHTML.appendChild(newCart);
    //         })
    //     }
    //     navbarCartSpan.innerText=totalQuantity;
    // }

    // //capture the product position click in cart and minus or plus click
    // listCartHTML.addEventListener('click',(event)=>{
    //     let positionClick=event.target;
    //     if(positionClick.classList.contains('listCart-minus')||positionClick.classList.contains('listCart-plus')){
    //         let product_id =positionClick.parentElement.parentElement.dataset.id;
    //         let type='listCart-minus';
    //         if(positionClick.classList.contains('listCart-plus')){
    //             type='listCart-plus';
    //         }
    //         changeQuantity(product_id,type);
    //     }
    // })

    // //adjust quantity and price when plus or minus click
    // const changeQuantity=(product_id,type)=>{
    //     let positionItemInCart=cart.findIndex((value)=>value.product_id==product_id);
    //     if(positionItemInCart>=0){
    //         switch (type) {
    //             case 'listCart-plus':
    //                  cart[positionItemInCart].quantity=cart[positionItemInCart].quantity+1;
    //                 break;
            
    //             default:
    //                 let valueChange=cart[positionItemInCart].quantity-1;
    //                 if(valueChange>0){
    //                     cart[positionItemInCart].quantity=valueChange;
    //                 }else{
    //                     cart.splice(positionItemInCart,1);
    //                 }
    //                 break;
    //         }
    //     }
    //     addCartToMemory();
    //     addCartToHTML();
    // }

        
    //     //add data from json file to products array
    //     const initApp=()=>{
    //     fetch('products.json')
    //     .then(response=>response.json())
    //     .then(data=>{
    //         products=data;

    //         //get cart from memory
    //         if(localStorage.getItem('carts')){
    //             carts=JSON.parse(localStorage.getItem('carts'));
    //             addCartToHTML();
    //         }
    //     })
    //     }
    //     initApp();

        















    
        // const addDataToHTML = () =>{
        //     rowbodyHTML.innerHTML='';
        //     if(products.length>0){
        //         products.forEach(product=>{
        //             let newProduct=document.createElement('div');
        //             newProduct.classList.add('row-card');
        //             newProduct.innerHTML=`
        //             <div class="row-card-img">
        //            <img src="${product.image}" alt="Product 1">
        //        </div>
        //        <div class="row-txt" data-id="${product.id}">
        //            <h3>${product.name}</h3>
        //            <h4>Rs.${product.price}/=</h4>
        //            <button class="btn-addtocart">
        //                Add to Cart
        //            </button>
        //        </div>
        //             `;
        //             rowbodyHTML.appendChild(newProduct);
        //         })
        //     }
        // }

















/*----------------------------1st------------------------------------*/
/* .gallery {
    display: grid;
    grid-template-columns: repeat(4, 8vw);
    grid-template-rows: repeat(8,8vh);
    grid-gap: 20px;
   
    margin: 50px;
}
.gallery__img {
    width: 100%;
    height: 100%;
    object-fit: fill;
    border-radius: 20px;
    box-shadow: 3px 3px 8px #888888;
    
}
.gallery__item{
overflow: hidden;
cursor: pointer;

}
.gallery-caption{
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 28px;
    padding: 5px;
    box-sizing: border-box;
    position: relative;
    text-align: center;
    background-color: #0b2f005a;
    transition: all 0.5s ease-in;
    font-size: 90px;
   text-align: center;
   text-transform: capitalize;
   width:100%;
    opacity: 0; 
}
.gallery-caption p{
    /* background:url(img/footer-bg.png);
    background-position: center;
    background-repeat: no-repeat; */
  /*  background-color:transparent; 
    -webkit-text-stroke:2px #fff; 
    -webkit-text-fill-color: transparent; 
    color: transparent;
      background-clip: text; 
    -webkit-background-clip: text;
}
.gallery__item--1 {
    grid-column-start: 1;
    grid-column-end: 7;
    grid-row-start: 1;
    grid-row-end: 5;
    
}
.gallery__item--1 >.gallery-caption{
   
     height:40.6vh ;
    transform: translateY(-272px);
   
  
    
}
.gallery__item--1 >.gallery-caption:hover{
  
    opacity: 1;
    
}
.gallery__item--2 {
    grid-column-start: 1;
    grid-column-end: 7;
    grid-row-start: 5;
    grid-row-end: 8;
}
.gallery__item--2 >.gallery-caption{
    height:30vh ;
    transform: translateY(-200px);
   
}
.gallery__item--2 >.gallery-caption:hover{
  
    opacity: 1;
    
}
.gallery__item--3 {
    grid-column-start: 7;
    grid-column-end: 12;
    grid-row-start: 1;
    grid-row-end: 4;
}
.gallery__item--3 >.gallery-caption{
    height:30vh ;
    transform: translateY(-200px);
   
}
.gallery__item--3 >.gallery-caption:hover{
  
    opacity: 1;
    
}
.gallery__item--4 {
    grid-column-start: 7;
    grid-column-end: 12;
    grid-row-start: 4;
    grid-row-end:8 ;
}
.gallery__item--4 >.gallery-caption{
    height:40.6vh ;
    transform: translateY(-272px);
   
}
.gallery__item--4 >.gallery-caption:hover{
  
    opacity: 1;
    
} */






    








// //----------Product carousel--------

// const carousel = document.querySelector('.carousel');
// let index = 0;
// const cardWidth=254;
// const cardMarginRight=40;
// // const cardWidth = document.querySelector('.row-card').offsetWidth;
// // const cardMarginRight = parseInt(window.getComputedStyle(document.querySelector('.row-card')).marginRight);

// function nextCard() {
//   index++;
//   carousel.style.transition = 'transform 0.5s ease';
//   carousel.style.transform = `translateX(-${(cardWidth + cardMarginRight) * index}px)`;
// }

// function prevCard() {
//   if (index > 0) {
//     index--;
//     carousel.style.transition = 'transform 0.5s ease';
//     carousel.style.transform = `translateX(-${(cardWidth + cardMarginRight) * index}px)`;
//   }
// }

// function autoLoop() {
//   setInterval(() => {
//     if (index < carousel.children.length - 5) { //no of card length
//       nextCard();
//     } else {
//       index = 0;
//     //carousel.style.transition = 'none';
//       carousel.style.transition = 'transform 0.5s ease';
//       carousel.style.transform = 'translateX(0)';
//     }
//   }, 5000); //time interva;
// }
// autoLoop();

// function prevCard() {
// if (index > 0) {
//   index--;
//   const translateDistance = (cardWidth + cardMarginRight) * index;
//   carousel.style.transition = 'transform 0.5s ease';
//   carousel.style.transform = `translateX(-${translateDistance}px)`;
// }
// }
// //   document.querySelector('.btn-prev').addEventListener('click', prevCard);
// //   document.querySelector('.btn-next').addEventListener('click', nextCard);
















<!-- Card Row -->
            <!-- <div class="row-body">
                <h5>Low Country Vegitables</h5>
                <div class="p-slider-container">
                    <div class="p-slider">
                        <div class="p-slider-row">
                            <ul>
                                <div class="row-card p-slider-item">
                                    <div class="row-card-img">
                                        <img src="product img/apple.jpg" alt="Product 1">
                                    </div>
                                    <div class="row-txt">
                                        <h3>Fresh Apple</h3>
                                        <h4>In Stock</h4>
                                        <button class="btn-addtocart">
                                            Add to Cart
                                        </button>
                                    </div>
                                </div>
                                <div class="row-card p-slider-item">
                                    <div class="row-card-img">
                                        <img src="product img/snickers.jpg" alt="Product 2">
                                    </div>
                                    <div class="row-txt">
                                        <h3>Snickers</h3>
                                        <h4>In Stock</h4>
                                        <button class="btn-addtocart">
                                            Add to Cart
                                        </button>
                                    </div>
                                </div>
                                <div class="row-card p-slider-item">
                                    <div class="row-card-img">
                                        <img src="product img/Orange juice.jpg" alt="Product 4">
                                    </div>
                                    <div class="row-txt">
                                        <h3>Fresh Orange juice</h3>
                                        <h4>In Stock</h4>
                                        <button class="btn-addtocart">
                                            Add to Cart
                                        </button>
                                    </div>
                                </div>
                            </ul>
                        </div>
                    <div class="p-slider-row">
                        <ul>
                            <div class="row-card p-slider-item">
                                <div class="row-card-img">
                                    <img src="product img/apple.jpg" alt="Product 1">
                                </div>
                                <div class="row-txt">
                                    <h3>Fresh Apple</h3>
                                    <h4>In Stock</h4>
                                    <button class="btn-addtocart">
                                        Add to Cart
                                    </button>
                                </div>
                            </div>
                            <div class="row-card p-slider-item">
                                <div class="row-card-img">
                                    <img src="product img/snickers.jpg" alt="Product 2">
                                </div>
                                <div class="row-txt">
                                    <h3>Snickers</h3>
                                    <h4>In Stock</h4>
                                    <button class="btn-addtocart">
                                        Add to Cart
                                    </button>
                                </div>
                            </div>
                            <div class="row-card p-slider-item">
                                <div class="row-card-img">
                                    <img src="product img/Orange juice.jpg" alt="Product 4">
                                </div>
                                <div class="row-txt">
                                    <h3>Fresh Orange juice</h3>
                                    <h4>In Stock</h4>
                                    <button class="btn-addtocart">
                                        Add to Cart
                                    </button>
                                </div>
                            </div>
                        </ul>
                    </div>
                </div>
                    <i class="fa fa-arrow-circle-left p-prev-btn fa-2x" aria-hidden="true"></i>
                    <i class="fa fa-arrow-circle-right p-next-btn fa-2x" aria-hidden="true"></i>
                </div>
            </div> -->

            <!-- Card Row -->
            <!-- <div class="row-body">
                <h5>Low Country Vegitables</h5>
                <div class="p-slider-container">
                    <div class="p-slider">
                        <div class="p-slider-row">
                            <ul>
                                <div class="row-card p-slider-item">
                                    <div class="row-card-img">
                                        <img src="product img/apple.jpg" alt="Product 1">
                                    </div>
                                    <div class="row-txt">
                                        <h3>Fresh Apple</h3>
                                        <h4>In Stock</h4>
                                        <button class="btn-addtocart">
                                            Add to Cart
                                        </button>
                                    </div>
                                </div>
                                <div class="row-card p-slider-item">
                                    <div class="row-card-img">
                                        <img src="product img/snickers.jpg" alt="Product 2">
                                    </div>
                                    <div class="row-txt">
                                        <h3>Snickers</h3>
                                        <h4>In Stock</h4>
                                        <button class="btn-addtocart">
                                            Add to Cart
                                        </button>
                                    </div>
                                </div>
                                <div class="row-card p-slider-item">
                                    <div class="row-card-img">
                                        <img src="product img/Orange juice.jpg" alt="Product 4">
                                    </div>
                                    <div class="row-txt">
                                        <h3>Fresh Orange juice</h3>
                                        <h4>In Stock</h4>
                                        <button class="btn-addtocart">
                                            Add to Cart
                                        </button>
                                    </div>
                                </div>
                            </ul>
                        </div>
                    <div class="p-slider-row">
                        <ul>
                            <div class="row-card p-slider-item">
                                <div class="row-card-img">
                                    <img src="product img/apple.jpg" alt="Product 1">
                                </div>
                                <div class="row-txt">
                                    <h3>Fresh Apple</h3>
                                    <h4>In Stock</h4>
                                    <button class="btn-addtocart">
                                        Add to Cart
                                    </button>
                                </div>
                            </div>
                            <div class="row-card p-slider-item">
                                <div class="row-card-img">
                                    <img src="product img/snickers.jpg" alt="Product 2">
                                </div>
                                <div class="row-txt">
                                    <h3>Snickers</h3>
                                    <h4>In Stock</h4>
                                    <button class="btn-addtocart">
                                        Add to Cart
                                    </button>
                                </div>
                            </div>
                            <div class="row-card p-slider-item">
                                <div class="row-card-img">
                                    <img src="product img/Orange juice.jpg" alt="Product 4">
                                </div>
                                <div class="row-txt">
                                    <h3>Fresh Orange juice</h3>
                                    <h4>In Stock</h4>
                                    <button class="btn-addtocart">
                                        Add to Cart
                                    </button>
                                </div>
                            </div>
                        </ul>
                    </div>
                </div>
                    <i class="fa fa-arrow-circle-left p-prev-btn fa-2x" aria-hidden="true"></i>
                    <i class="fa fa-arrow-circle-right p-next-btn fa-2x" aria-hidden="true"></i>
                </div>
                </div> -->











    // //-------------Redirect to productDetail.html with data-Id-------------
    // document.addEventListener("DOMContentLoaded", function() {
    //     const rowCards = document.querySelectorAll(".row-card");
        
    //     rowCards.forEach(function(card) {
    //         card.addEventListener("click", function() {
    //             const dataId = this.getAttribute("data-id");
    //             if (dataId) {
    //                 // Redirect to productDetail.html with data ID as query parameter
    //                 window.location.href = "productDetail.html?id=" + dataId;
    //             }
    //         });
    //     });
    // });




    // document.addEventListener("DOMContentLoaded", function() {
    //     console.log("DOM content loaded");
    //     const rowCards = document.querySelectorAll(".row-card");
        
    //     rowCards.forEach(function(card) {
    //         card.addEventListener("click", function() {
    //             console.log("Row card clicked");
    //             const dataId = this.getAttribute("data-id");
    //             if (dataId) {
    //                 // Redirect to productDetail.html with data ID as query parameter
    //                 window.location.href = "productDetail.html?id=" + dataId;
    //             }
    //         });
    //     });
    // });



    // // Event listener setup
    // function setupRowCardEventListeners() {
    //     const rowCards = document.querySelectorAll(".row-card");
        
    //     rowCards.forEach(function(card) {
    //         card.addEventListener("click", function() {
    //             const dataId = this.getAttribute("data-id");
    //             if (dataId) {
    //                 // Redirect to productDetail.html with data ID as query parameter
    //                 window.location.href = "productDetail.html?id=" + dataId;
    //             }
    //         });
    //     });
    // }

    // // Attach event listeners when the page is loaded
    // document.addEventListener("DOMContentLoaded", function() {
    //     setupRowCardEventListeners();
    // });

    // // Attach event listeners even when the page is revisited (e.g., from productDetail.html)
    // setupRowCardEventListeners();













    // //--------------pass data from search input field to search page---------------
    // function passDataAndRedirect() {
    //         const searchData = document.getElementById("searchInput").value;
    //         // Encode search input to handle special characters
    //         const encodedSearchData = encodeURIComponent(searchData);
    //         // Redirect to search.html with search input as a query parameter
    //         window.location.href = "search.html?searchInput=" + encodedSearchData;
    // }












// // Function to get the value of a query parameter by its name
    // function getQueryParam(name) {
    //         const urlParams = new URLSearchParams(window.location.search);
    //         return urlParams.get(name);
    //     }

    //     // Function to initialize the product detail page
    //     function init() {
    //         const dataId = getQueryParam('id');
    //         if (dataId) {
    //             // If dataId is available, you can use it for further processing
    //             console.log("Data ID:", dataId);
    //         } else {
    //             console.log("No data ID found in the URL.");
    //         }
    //     }

    //     // Call init() when the page loads
    //     window.onload = init;



















        // // Read the selected item from localStorage
        // document.addEventListener('DOMContentLoaded', function() {
        //     const selectedItemId = localStorage.getItem('selectedItemId');
        //     if (selectedItemId) {
        //         // Perform action based on selected item
        //         switch (selectedItemId) {
        //             case 'sub_dep_1_all':
        //                 // Perform action for 'All Vegetables'
        //                 document.getElementById('vegitable-btn').click();
        //                 break;
        //             case 'sub_dep_1_organic':
        //                 // Perform action for 'Organic'
        //                 break;
        //             case 'sub_dep_1_inorganic':
        //                 // Perform action for 'Inorganic'
        //                 break;
        //             case 'sub_dep_1_packets':
        //                 // Perform action for 'Packets'
        //                 break;
        //             case 'sub_dep_2_all':
        //                 document.getElementById('fruit-btn').click();
        //                 // Perform action for 'All Fruits'
        //                 break;
        //             case 'sub_dep_2_organic':
        //                 // Perform action for 'Organic'
        //                 break;
        //             case 'sub_dep_2_inorganic':
        //                 // Perform action for 'Inorganic'
        //                 break;
        //             case 'sub_dep_2_packets':
        //                 // Perform action for 'Packets'
        //                 break;
        //             // Add cases for other sub-departments as needed
        //             default:
        //                 // Handle other cases if needed
        //         }
        //         // Clear the selected item from localStorage
        //         localStorage.removeItem('selectedItemId');
        //     }
        // });























    //---------------------Add Cart Items to Checkout----------------------------

    // document.addEventListener('DOMContentLoaded', function() {
    // // Reference the container element where cart items are displayed
    // const cartContainer = document.getElementById('orderDetail-Box');

    // // Retrieve cart data from local storage
    // const cartData = JSON.parse(localStorage.getItem('cart'));
    // console.log('Cart Data:', cartData);

    // // Fetch products data from category.json
    // fetch('category.json')
    //     .then(response => response.json())
    //     .then(data => {
    //         // Extract only the "products" array
    //         const productsArray = data.categories.flatMap(category => category.subcategories.flatMap(subcategory => subcategory.products));
    //         console.log('Products Array:', productsArray);

    //         let totalPrice = 0; // Initialize total price variable

    //         // Iterate over each item in the cart data
    //         cartData.forEach(cartItem => {
    //             // Find the product in the products array with the matching ID
    //             const product = productsArray.find(product => product.id === cartItem.product_id);

    //             // Check if the product was found
    //             if (product) {
    //                 console.log(product.name);

    //                 // Calculate subtotal for the current cart item
    //                 const subtotal = product.price * cartItem.quantity;
    //                 totalPrice += subtotal; // Add subtotal to total price

    //                 // Create a cart item element
    //                 const cartItemElement = document.createElement('div');
    //                 cartItemElement.classList.add('order-details');
    //                 cartItemElement.setAttribute('data-id', product.id);
    //                 cartItemElement.innerHTML = `
    //                     <div class="order-details-img">
    //                         <img src="${product.image}" alt="${product.name}">
    //                     </div>
    //                     <div class="order-details-texts">
    //                         <div class="order-detail-txt">
    //                             <p>${product.name}<span>Rs.${product.price*cartItem.quantity}</span></p>
    //                         </div>
    //                         <div class="order-detail-icons">
    //                             <div class="order-add-items">
    //                                 <button class="add-items-btn-minus items-btn">-</button>
    //                                 <span class="add-no-of-items">${cartItem.quantity}</span>
    //                                 <button class="add-items-btn-plus items-btn">+</button>
    //                                 <i class="fa fa-times" aria-hidden="true"></i>
    //                             </div>
    //                         </div>
    //                     </div>
    //                 `;

    //                 // Append the cart item element to the container
    //                 cartContainer.appendChild(cartItemElement);
    //             } else {
    //                 console.log(`Product with ID ${cartItem.product_id} not found.`);
    //             }
    //         });

    //         // Display the total price
    //         const totalPriceElement = document.getElementById('sub-total');
    //         totalPriceElement.textContent = `Rs.${totalPrice.toFixed(2)}`;
    //         // document.body.appendChild(totalPriceElement);
    //     })
    //     .catch(error => console.error('Error fetching data:', error));
    // });




















    // // Define the changequantity function
    // const changequantity = (product_id, type) => {
    //     const cartData = JSON.parse(localStorage.getItem('cart'));
    //     let positionItemInCart = cartData.findIndex((value) => value.product_id == product_id);
    //     if (positionItemInCart >= 0) {
    //         switch (type) {
    //             case 'listCart-plus':
    //             cartData[positionItemInCart].quantity = cartData[positionItemInCart].quantity + 1;
    //                 break;
    //             default:
    //                 let valueChange = cartData[positionItemInCart].quantity - 1;
    //                 if (valueChange > 0) {
    //                     cartData[positionItemInCart].quantity = valueChange;
    //                 } else {
    //                     cartData.splice(positionItemInCart, 1);
    //                 }
    //                 break;
    //         }
    //     }
    //     localStorage.setItem('cart', JSON.stringify(cartData));
    //     // addcarttoHTML(); // Update the HTML display after changing quantity
    // };

    

    // document.addEventListener('DOMContentLoaded', function () {
    //     // Reference the container element where cart items are displayed
    //     const cartContainer = document.getElementById('orderDetail-Box');

    //     // Retrieve cart data from local storage
    //     const cartData = JSON.parse(localStorage.getItem('cart'));
    //     console.log('Cart Data:', cartData);

    //     // Fetch products data from category.json
    //     fetch('category.json')
    //         .then(response => response.json())
    //         .then(data => {
    //             // Extract only the "products" array
    //             const productsArray = data.categories.flatMap(category => category.subcategories.flatMap(subcategory => subcategory.products));
    //             console.log('Products Array:', productsArray);

    //             let totalPrice = 0; // Initialize total price variable

    //             // Iterate over each item in the cart data
    //             cartData.forEach(cartItem => {
    //                 // Find the product in the products array with the matching ID
    //                 const product = productsArray.find(product => product.id === cartItem.product_id);

    //                 // Check if the product was found
    //                 if (product) {
    //                     console.log(product.name);

    //                     // Calculate subtotal for the current cart item
    //                     const subtotal = product.price * cartItem.quantity;
    //                     totalPrice += subtotal; // Add subtotal to total price

    //                     // Create a cart item element
    //                     const cartItemElement = document.createElement('div');
    //                     cartItemElement.classList.add('order-details');
    //                     cartItemElement.setAttribute('data-id', product.id);
    //                     cartItemElement.innerHTML = `
    //                         <div class="order-details-img">
    //                             <img src="${product.image}" alt="${product.name}">
    //                         </div>
    //                         <div class="order-details-texts">
    //                             <div class="order-detail-txt">
    //                                 <p>${product.name}<span>Rs.${subtotal}</span></p>
    //                             </div>
    //                             <div class="order-detail-icons">
    //                                 <div class="order-add-items">
    //                                     <button class="add-items-btn-minus items-btn">-</button>
    //                                     <span class="add-no-of-items">${cartItem.quantity}</span>
    //                                     <button class="add-items-btn-plus items-btn">+</button>
    //                                     <i class="fa fa-times" aria-hidden="true"></i>
    //                                 </div>
    //                             </div>
    //                         </div>
    //                     `;

    //                     // Add event listeners to plus and minus buttons
    //                     const plusButton = cartItemElement.querySelector('.add-items-btn-plus');
    //                     const minusButton = cartItemElement.querySelector('.add-items-btn-minus');
                        
    //                     plusButton.addEventListener('click', () => changequantity(product.id, 'listCart-plus'));
    //                     minusButton.addEventListener('click', () => changequantity(product.id, 'listCart-minus'));

    //                     // Append the cart item element to the container
    //                     cartContainer.appendChild(cartItemElement);
    //                 } else {
    //                     console.log(`Product with ID ${cartItem.product_id} not found.`);
    //                 }
    //             });

    //             // Display the total price
    //             console.log('Total Price:', totalPrice);
    //         });
    // });






















        // // Add event listener to input field
        // document.getElementById('city').addEventListener('input', function() {
        // const cityInput = this.value.toLowerCase(); // Get input value and convert to lowercase

        // // Fetch data from city.json
        // fetch('city.json')
        //     .then(response => {
        //     if (!response.ok) {
        //         throw new Error('Network response was not ok');
        //     }
        //     return response.json();
        //     })
        //     .then(data => {
        //     console.log('Fetched data:', data); // Debug: Check if data is fetched correctly

        //     // Flag to check if any subcity matches the input
        //     let matchFound = false;

        //     // Iterate over each city
        //     data.forEach(cityData => {
        //         const cityName = cityData.city;

        //         // Iterate over subcities for each city
        //         cityData.subCities.forEach(subCity => {
        //         // Check if subCity is defined and if the input city matches it
        //         if (subCity && subCity.name && subCity.name.toLowerCase() === cityInput) {
        //             document.getElementById('cityNameSpan').textContent = `${cityName}`;
        //             // document.getElementById('subCityNameSpan').textContent = `Subcity: ${subCity.name}`;
        //             document.getElementById('deliveryChargeSpan').textContent = `Rs.${subCity.deliveryCharge}`;
        //             matchFound = true;
        //         }
        //         });
        //     });

        //     // If no match found, clear the spans
        //     if (!matchFound) {
        //         document.getElementById('cityNameSpan').textContent = '';
        //         // document.getElementById('subCityNameSpan').textContent = '';
        //         document.getElementById('deliveryChargeSpan').textContent = '';
        //     }
        //     })
        //     .catch(error => {
        //     console.error('Error fetching data:', error);
        //     });
        // });
















    //     // Add event listener to input field
    // document.getElementById('city').addEventListener('input', function() {
    //   const cityInput = this.value.toLowerCase(); // Get input value and convert to lowercase

    //   // Fetch data from city.json
    //   fetch('city.json')
    //     .then(response => {
    //       if (!response.ok) {
    //         throw new Error('Network response was not ok');
    //       }
    //       return response.json();
    //     })
    //     .then(data => {
    //       console.log('Fetched data:', data); // Debug: Check if data is fetched correctly

    //       // Clear previous suggestions
    //       const subCityList = document.getElementById('subCityList');
    //       subCityList.innerHTML = '';

    //       // Iterate over each city
    //       data.forEach(cityData => {
    //         // Iterate over subcities for each city
    //         cityData.subCities.forEach(subCity => {
    //           // Check if subCity is defined and if the input city matches it
    //           if (subCity && subCity.name.toLowerCase().includes(cityInput)) {
    //             // Create list item for the matching sub-city
    //             const li = document.createElement('li');
    //             li.textContent = subCity.name;
    //             // Add click event listener to populate input field with selected sub-city
    //             li.addEventListener('click', function() {
    //               document.getElementById('city').value = subCity.name;
    //               subCityList.innerHTML = ''; // Clear suggestions
    //             });
    //             // Append list item to the list
    //             subCityList.appendChild(li);
    //           }
    //         });
    //       });
    //     })
    //     .catch(error => {
    //       console.error('Error fetching data:', error);
    //     });
    // });

























        //------------Products sugesstion in search bar---------

        // Fetch data from city.json
        // fetch('city.json')
        // .then(response => {
        //     if (!response.ok) {
        //     throw new Error('Network response was not ok');
        //     }
        //     return response.json();
        // })
        // .then(data => {
        //     console.log('Fetched data:', data); // Debug: Check if data is fetched correctly
            
        //     // Iterate over each city
        //     data.forEach(cityData => {
        //     const cityName = cityData.city;
        //     console.log('City:', cityName); // Debug: Check if city name is correct
            
        //     // Iterate over subcities for each city
        //     cityData.subCities.forEach(subCity => {
        //         console.log(`City: ${cityName}, Subcity: ${subCity.name}, Delivery Charge: ${subCity.deliveryCharge}`);
        //     });
        //     });
        // })
        // .catch(error => {
        //     console.error('Error fetching data:', error);
        // });











        // // Add event listener to input field
        // document.getElementById('city').addEventListener('input', function() {
        // const cityInput = this.value.toLowerCase(); // Get input value and convert to lowercase

        // // Fetch data from city.json
        // fetch('city.json')
        //     .then(response => {
        //     if (!response.ok) {
        //         throw new Error('Network response was not ok');
        //     }
        //     return response.json();
        //     })
        //     .then(data => {
        //     console.log('Fetched data:', data); // Debug: Check if data is fetched correctly

        //     // Flag to check if any subcity matches the input
        //     let matchFound = false;

        //     // Iterate over each city
        //     data.forEach(cityData => {
        //         const cityName = cityData.city;

        //         // Iterate over subcities for each city
        //         cityData.subCities.forEach(subCity => {
        //         // Check if subCity is defined and if the input city matches it
        //         if (subCity && subCity.name && subCity.name.toLowerCase() === cityInput) {
        //             console.log(`City: ${cityName}, Subcity: ${subCity.name}, Delivery Charge: ${subCity.deliveryCharge}`);
        //             matchFound = true;
        //         }
        //         });
        //     });

        //     // If no match found, inform the user
        //     if (!matchFound) {
        //         console.log('No matching subcity found for input:', cityInput);
        //     }
        //     })
        //     .catch(error => {
        //     console.error('Error fetching data:', error);
        //     });
        // });












        // //------------Add a click event listener to the parent element of all btn-addtocart buttons-----------
        // document.getElementById('catalog').addEventListener('click', function(event) {
        //     let product_id;
        //     // Check if the clicked element is a btn-addtocart
        //     if (event.target.classList.contains('btn-addtocart')) {
        //         // Retrieve the parent row-card element of the clicked button
        //         const parentRowCard = event.target.closest('.row-card');
        //         // Retrieve the dataset-id attribute value of the parent row-card
        //         const productId = parentRowCard.getAttribute('data-id');
        //         // Assign the dataset-id to the product_id variable
        //         product_id = productId;
        //         // Print the dataset-id to the console
        //         console.log(product_id);
        //         addtoCart(product_id);
        //     }
        // });































        //--------------------------google map-------------------
        // function initMap() {
        //     const map = new google.maps.Map(document.getElementById("map"), {
        //         center: { lat: 6.9271, lng: 79.8612 },
        //         zoom: 15,
        //     });

        //     const locations = [
        //         { lat: 6.9645556, lng: 79.90075 }, // Location 1
        //         { lat: 6.857148165994383, lng: 79.868251402696 } // Location 2
        //     ];

        //     const markers = [];

        //     // Function to add markers to the map
        //     function addMarker(location) {
        //         const marker = new google.maps.Marker({
        //             position: location,
        //             map: map,
        //         });
        //         markers.push(marker);
        //     }

        //     // Button click event handlers
        //     document.getElementById("button1").addEventListener("click", () => {
        //         markers.forEach(marker => marker.setMap(null)); // Clear previous markers
        //         addMarker(locations[0]); // Add marker for Location 1
        //         map.setCenter(locations[0]); // Center map on Location 1
        //     });

        //     document.getElementById("button2").addEventListener("click", () => {
        //         markers.forEach(marker => marker.setMap(null)); // Clear previous markers
        //         addMarker(locations[1]); // Add marker for Location 2
        //         map.setCenter(locations[1]); // Center map on Location 2
        //     });
        // }
















        //------------------ delivery branches detail cards----------------------

        // fetch('city.json')
        // .then(response => {
        //     if (!response.ok) {
        //     throw new Error('Network response was not ok');
        //     }
        //     return response.json();
        // })
        // .then(data => {
        //     const locationCardsContainer = document.querySelector('.location-cards');
            
        //     // Iterate over each city data
        //     data.forEach(cityData => {
        //     const cityName = cityData.city;
        //     const cityDetails = cityData.details;
            
        //     // Create card element
        //     const card = document.createElement('div');
        //     card.classList.add('location-card');
            
        //     // Add city name to the card
        //     const cityNameElement = document.createElement('h3');
        //     cityNameElement.textContent = cityName;
        //     card.appendChild(cityNameElement);
            
        //     // Add address and telephone details to the card
        //     const detailsList = document.createElement('ul');
        //     for (const [key, value] of Object.entries(cityDetails)) {
        //         // Check if the key is address or telephone
        //         if (key === 'address' || key === 'telephone') {
        //         // Capitalize first letter of the key
        //         const capitalizedKey = key.charAt(0).toUpperCase() + key.slice(1);
                
        //         // Create detail item element
        //         const detailItem = document.createElement('li');
                
        //         // Bold the key
        //         detailItem.innerHTML = `<strong>${capitalizedKey}</strong>: ${value}`;
                
        //         // Append the detail item to the list
        //         detailsList.appendChild(detailItem);
        //         }
        //     }
        //     card.appendChild(detailsList);
            
        //     // Append the card to the container
        //     locationCardsContainer.appendChild(card);
        //     });
        // })
        // .catch(error => {
        //     console.error('Error fetching data:', error);
        // });














        // // Function to initialize the product detail page
        // function init() {
        //     const dataId = getQueryParam('id');
        //     if (dataId) {
        //         const outerItems = JSON.parse(localStorage.getItem('outerProductsArray'));
        //         const matchedItem = outerItems.find(item => item.id === dataId);
        //         if (matchedItem) {
        //             // If a matching item is found, print its details using innerHTML
        //             document.getElementById('productDetails').innerHTML = `
        //             <div class="productDetail-image">
        //                 <!-- Product image -->
        //                 <img src="${matchedItem.image}" alt="${matchedItem.name}">
        //             </div>
        //             <div class="productDetail-info" dataset-id="${matchedItem.id}">
        //                 <h1 class="productDetail-name">${matchedItem.name}</h1>
        //                 <p class="productDetail-description">${matchedItem.description}</p>
        //                 <p class="productDetail-price">Price: Rs.${matchedItem.price}</p>
        //                 <button class="btn-addtocart" style="margin-left: 0;">Add to Cart</button>
        //                 <p class="productDetail-stores">Available Stores: <span>GrocGo</span></p>
        //             </div>
        //             `;
                    
        //         } else {
        //             console.log("No matching item found in outerItems.");
        //         }
        //     } else {
        //         console.log("No data ID found in the URL.");
        //     }

        // }